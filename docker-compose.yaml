version: '3.6'
services:
  # Portainer CE
  # Managing containers via nice web UI
  portainer-ce:
    container_name: portainer
    image: portainer/portainer-ce
    restart: unless-stopped
    ports:
      - 8000:8000 # Agent
      - 9000:9000 # Web UI
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - .docker/portainer-ce/data:/data

  # MariaDB
  # A database Nginx Proxy Manager and Umami
  db:
    container_name: db
    image: mariadb
    restart: unless-stopped
    volumes:
      - .docker/mariadb/db:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
      - ./db:/docker-entrypoint-initdb.d # FIX entrypoint
    env_file:
      - .env

  # Adminer
  # A dead-simple database manager
  adminer:
    container_name: adminer
    image: adminer
    restart: unless-stopped
    environment:
      ADMINER_PLUGINS: frames
    ports:
      - 8080:8080
    depends_on:
      - db

  # Nginx Proxy Manager
  # Nice and simple Nginx UI for managing reverce proxy
  nginx:
    container_name: nginx
    image: jc21/nginx-proxy-manager:latest
    restart: unless-stopped
    ports:
      - 80:80 # HTTP port
      - 443:443 # HTTPS port
      - 8081:81 # Admin Paner port
    environment:
      DB_MYSQL_HOST: ${MYSQL_HOST}
      DB_MYSQL_PORT: ${MYSQL_PORT}
      DB_MYSQL_USER: ${MYSQL_USER}
      DB_MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      DB_MYSQL_NAME: 'nginxproxymanager'
    volumes:
      - .docker/nginx-proxy-manager/data:/data
      - .docker/nginx-proxy-manager/letsencrypt:/etc/letsencrypt
    depends_on:
      - db

  # Samba
  # Remote access to the file system
  samba:
    container_name: samba
    image: dperson/samba
    volumes:
      - ${HASSIO_VOLUME}:/mnt/hassio
      - ${MEDIA_VOLUME}:/mnt/media
    environment:
      USERID: ${PUID}
      GROUPID: ${PGID}
    ports:
      - 139:139
      - 445:445
      - 137:137/udp
      - 138:138/udp
    command: >
      samba.sh
        -s "hassio;/mnt/hassio;yes;no;no;all"
        -s "media;/mnt/media;yes;no;no;all"
        -u ${SAMBA_USER};${SAMBA_PASSWORD}
    restart: unless-stopped

  # Plex
  # Personal media server with movies and tv-series
  plex:
    image: linuxserver/plex
    container_name: plex
    network_mode: host
    env_file:
      - .env
    environment:
      VERSION: docker
    volumes:
      - .docker/plex/config:/config
      - ${PLEX_LIBRARY}:/config/Library
      - ${MEDIA_VOLUME}:/media
    restart: unless-stopped

  # AdGuard Home
  # Ad-blocking DNS server
  adguard:
    container_name: adguard
    image: adguard/adguardhome
    restart: unless-stopped
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 67:67/udp
      - 853:853/tcp
      - 8380:80/tcp
      - 8300:3000/tcp
    volumes:
      - .docker/adguard/work:/opt/adguardhome/work
      - .docker/adguard/conf:/opt/adguardhome/conf

  # Transmission
  # A torrent client for downloading media
  transmission:
    container_name: transmission
    image: linuxserver/transmission
    restart: unless-stopped
    env_file:
      - .env
    environment:
      USER: ${TRANSMISSION_USER}
      PASS: ${TRANSMISSION_PASSWORD}
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    volumes:
      - .docker/transmission/config:/config
      - ${MEDIA_VOLUME}:/downloads

  # Umami.is
  # A self-hosted analytics for my websites
  # umami:
  #   container_name: umami
  #   # Original image does not support ARM
  #   # image: ghcr.io/mikecao/umami:mysql-latest
  #   build: ./umami
  #   restart: unless-stopped
  #   ports:
  #     - 8333:3000
  #   environment:
  #     DATABASE_URL: mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@${MYSQL_HOST}:${MYSQL_PORT}/umami
  #     DATABASE_TYPE: mysql
  #     HASH_SALT: ${UMAMI_HASH_SALT}
  #     IGNORE_IP: ${UMAMI_IGNORE_IP}
  #   depends_on:
  #     - db

  # Bitwarden
  # Vaultwarden is a Rust implementation of Bitwarden API for less powerful devices
  bitwarden:
    container_name: bitwarden
    image: vaultwarden/server
    restart: unless-stopped
    env_file:
      - .env
    environment:
      WEBSOCKET_ENABLED: 'true'
    ports:
      - 3880:80
      - 3812:3012
    volumes:
      - .docker/bitwarden:/data
